define_geometry(moving_sphere)
    at(0, sin(arg.t), 0)
    scale(1 + abs(sin(arg.t)))
    sd_sphere(1);

define_geometry(room, vec3 size, vec2 door, float thick)
at(0,size.y,0)
union {
    difference {
        onionize(thick) sd_box(size);
        at(0, -door.y/2, -size.z + thick) sd_box(vec3(door, thick*2));
        at(0,0,-5) sd_box(vec3(10,3,3));
        at(0,0,5) sd_box(vec3(10,3,3));
    };
};

camera {
    keyframe(0) {
        pos(0, 0, 0);
        look_at(10, -3, 10);
    };

    keyframe(5) {
        pos(10, 0, -5);
    };

    keyframe(6);

    keyframe(11) {
        pos(10, 0, 5);
        euler(0, 180, 0, degrees);
    };

    keyframe(12);

    keyframe(17) {
        pos(10, 2, 5);
        euler(0, 90, 0, degrees);
    };

    keyframe(20);
};

at(0,0,5)
opaque(1,1,1) union {
    moving_sphere();
    at(3,0,0) at_t(1) moving_sphere();
};

opaque(0.9, 0.8, 1.0)
at(10, -3, 10)
union {
    room(vec3(5,5,10), vec2(1.5,3), 0.5);
    intersection {
        sd_column_aa(vec3(0,1,0), 3);
        sd_halfspace_aa(vec3(0,1,0));
    };
};

opaque(1.0, 0.98, 0.75)
at(-160, 0, 5)
repeat(1000, 0, 1000)
sd_column_aa(vec3(0,1,0), 50);
